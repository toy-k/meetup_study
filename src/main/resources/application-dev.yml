server:
  port: 8080

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: ${APPLICATION_DRIVER_CLASS_NAME}
    url: ${APPLICATION_URL}
    username: ${APPLICATION_USERNAME}
    password:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        show_sql: true  # sql 쿼리를 보여줍니다.
        format_sql: true  # sql query formatting
        use_sql_comments: true  # sql 쿼리의 추가정보를 보여줍니다.

  cache:
    type: redis
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          required: true

jwt:
  secretKey: ${JWT_SECRET_KEY}
  accessToken:
    expiration: ${JWT_ACCESSTOKEN_EXPIRATION}
    header: ${JWT_ACCESSTOKEN_HEADER}
  refreshToken:
    expiration: ${JWT_REFRESHTOKEN_EXPIRATION}
    header: ${JWT_REFRESHTOKEN_HEADER}

logging:
  level:
    root: info
    com.example: debug
    com.example.meetup_study: debug
