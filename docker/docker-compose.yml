version: "3"
services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=hydra
      - ADMINER_PLUGINS=tables-filter tinymce
    depends_on:
      - mysql

  application:
    container_name: application
    build:
      context: ../
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${APPLICATION_DEV_DRIVER_CLASS_NAME}
      SPRING_DATASOURCE_URL: ${APPLICATION_DEV_URL}
      SPRING_DATASOURCE_USERNAME: ${APPLICATION_DEV_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${APPLICATION_DEV_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      mysql:
        condition: service_healthy